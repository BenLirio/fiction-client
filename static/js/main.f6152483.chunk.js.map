{"version":3,"sources":["Modal/modal-context.js","Layout/Header/Header.js","apiConfig.js","api/storys.js","user-context.js","Layout/PermanentDrawer/PermanentDrawer.js","Layout/Layout.js","hooks/useStory.js","components/Page/Page.js","views/Story.js","hooks/useStories.js","views/Storys.js","views/NotFound.js","App.js","api/auth.js","serviceWorker.js","theme.js","index.js"],"names":["modalContext","React","createContext","current","close","useStyles","makeStyles","theme","root","width","drawerWidth","marginLeft","Header","open","useContext","classes","AppBar","className","Toolbar","Button","color","onClick","apiUrls","apiUrl","window","location","hostname","index","token","axios","url","method","headers","Authorization","userContext","setToken","drawer","drawerPaper","PermanentDrawer","history","useHistory","onCreate","text","data","story","title","create","then","res","push","_id","catch","console","error","log","Error","Drawer","variant","paper","List","map","ListItem","button","key","ListItemText","primary","listItem","display","Layout","children","useStory","useState","setStory","setError","loading","setLoading","id","useParams","getStory","useCallback","show","height","background","palette","boxShadow","shadows","margin","Page","Story","useEffect","useStories","stories","setStories","getStories","storys","Storys","NotFound","App","credentials","email","password","user","path","exact","to","Boolean","match","createMuiTheme","rootJsx","userState","pToken","Provider","value","setCurrent","modalState","modal","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6152483.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst initialModalState = {\n  current: '',\n  close: () => {}\n}\n\nconst modalContext = React.createContext(initialModalState)\n\nexport const ModalContextProvider = ({ children }) => {\n  const [current, setCurrent] = useState('none')\n  const modalState = {\n    current,\n    close: () => {\n      setCurrent('none')\n    },\n    open: modal => {\n      setCurrent(modal)\n    }\n  }\n\n  return (\n    <modalContext.Provider value={modalState}>{children}</modalContext.Provider>\n  )\n}\n\nexport default modalContext\n","import React, { useContext } from 'react'\nimport { AppBar, Toolbar, Button, makeStyles } from '@material-ui/core'\nimport modalContext from '../../Modal/modal-context'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: `calc(100% - ${theme.drawerWidth}px)`,\n    marginLeft: theme.drawerWidth\n  }\n}))\n\nconst Header = () => {\n  const { open } = useContext(modalContext)\n  const classes = useStyles()\n  return (\n    <>\n      <AppBar className={classes.root}>\n        <Toolbar>\n          <Button color=\"inherit\" onClick={() => open('signIn')}>\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  )\n}\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://fiction-api.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const create = token => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/storys',\n    data: {\n      story: {\n        title: 'title',\n        text: 'text'\n      }\n    },\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  })\n}\n\nexport const index = token => {\n  return axios({\n    url: apiUrl + '/storys',\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  })\n}\nexport const show = (token, id) => {\n  return axios({\n    url: apiUrl + '/storys/' + id,\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios({\n    url: apiUrl + '/sign-out',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Token token=${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Token token=${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { useState, useCallback } from 'react'\n\nconst initialUserState = {\n  token: null,\n  setToken: () => {}\n}\n\nconst userContext = React.createContext(initialUserState)\n\nexport const UserContextProvider = ({ children }) => {\n  const [token, setToken] = useState(null)\n\n  const setTokenCallback = useCallback(pToken => {\n    setToken(pToken)\n  }, [])\n  const userState = {\n    token,\n    setToken: setTokenCallback\n  }\n\n  return (\n    <userContext.Provider value={userState}>{children}</userContext.Provider>\n  )\n}\n\nexport default userContext\n","import React, { useContext } from 'react'\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core'\nimport { create, index } from '../../api/storys'\nimport userContext from '../../user-context'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: theme.drawerWidth\n  },\n  drawerPaper: {\n    width: theme.drawerWidth\n  }\n}))\n\nconst PermanentDrawer = () => {\n  const { token } = useContext(userContext)\n  const history = useHistory()\n  const onCreate = text => {\n    switch (text) {\n      case 'New Story':\n        create(token)\n          .then(res => {\n            history.push('/stories/' + res.data.story._id)\n          })\n          .catch(console.error)\n        break\n      case 'Stories':\n        index(token).then(console.log)\n        history.push('/stories')\n        break\n      default:\n        throw new Error()\n    }\n  }\n  const classes = useStyles()\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={classes.drawer}\n      classes={{ paper: classes.drawerPaper }}\n    >\n      <List>\n        {['New Story', 'Stories'].map(text => (\n          <ListItem onClick={() => onCreate(text)} button key={text}>\n            <ListItemText primary={text} className={classes.listItem} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  )\n}\n\nexport default PermanentDrawer\n","import React from 'react'\nimport Header from './Header/Header'\nimport { makeStyles } from '@material-ui/core'\n\nimport PermanentDrawer from './PermanentDrawer/PermanentDrawer'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  }\n}))\n\nconst Layout = ({ children }) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <Header />\n      <div className={classes.root}>\n        <PermanentDrawer />\n        {children}\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import { useContext, useState, useCallback } from 'react'\nimport { show } from '../api/storys'\nimport userContext from '../user-context'\nimport { useParams } from 'react-router-dom'\n\n// TODO: this logic is repetitive with useStories\n\nconst useStory = () => {\n  const { token } = useContext(userContext)\n  const [story, setStory] = useState(null)\n  const [error, setError] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const { id } = useParams()\n\n  const getStory = useCallback(() => {\n    setLoading(true)\n    show(token, id)\n      .then(res => setStory(res.data.story))\n      .then(() => {\n        setError(false)\n        setLoading(false)\n      })\n      .catch(() => {\n        setLoading(false)\n        setError(true)\n      })\n  }, [token, id])\n  return {\n    loading,\n    story,\n    error,\n    getStory\n  }\n}\n\nexport default useStory\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 400,\n    height: 400,\n    background: theme.palette.background.paper,\n    boxShadow: theme.shadows[3],\n    margin: '20px auto 0'\n  }\n}))\n\nconst Page = () => {\n  const classes = useStyles()\n  return <div className={classes.root}>Page</div>\n}\n\nexport default Page\n","import React, { useEffect, useContext } from 'react'\nimport useStory from '../hooks/useStory'\nimport userContext from '../user-context'\nimport Page from '../components/Page/Page'\n\nconst Story = () => {\n  const { loading, story, error, getStory } = useStory()\n  const { token } = useContext(userContext)\n  useEffect(() => {\n    getStory()\n  }, [token])\n  return (\n    <>\n      <h2>{loading && 'Loading....'}</h2>\n      {story && <Page />}\n      <h2>{error && 'Error'}</h2>\n    </>\n  )\n}\n\nexport default Story\n","import { useContext, useState, useCallback } from 'react'\nimport { index } from '../api/storys'\nimport userContext from '../user-context'\n\nconst useStories = () => {\n  const { token } = useContext(userContext)\n  const [stories, setStories] = useState(null)\n  const [error, setError] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  const getStories = useCallback(() => {\n    setLoading(true)\n    index(token)\n      .then(res => setStories(res.data.storys))\n      .then(() => {\n        setError(false)\n        setLoading(false)\n      })\n      .catch(() => {\n        setLoading(false)\n        setError(true)\n      })\n  }, [token])\n  return {\n    loading,\n    stories,\n    error,\n    getStories\n  }\n}\n\nexport default useStories\n","import React, { useEffect, useContext } from 'react'\nimport useStories from '../hooks/useStories'\nimport userContext from '../user-context'\n\nconst Storys = () => {\n  const { loading, stories, error, getStories } = useStories()\n  const { token } = useContext(userContext)\n  useEffect(() => {\n    getStories()\n  }, [token])\n  return (\n    <>\n      <h3>{loading && 'loading...'}</h3>\n      <h1>{stories && 'Stories'}</h1>\n      <h3>{error && 'error'}</h3>\n    </>\n  )\n}\n\nexport default Storys\n","import React from 'react'\n\nconst NotFound = () => {\n  return <div>404 not found</div>\n}\n\nexport default NotFound\n","import React, { useEffect, useContext } from 'react'\nimport Layout from './Layout/Layout'\nimport Story from './views/Story'\nimport Storys from './views/Storys'\nimport { signIn } from './api/auth'\nimport userContext from './user-context'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport NotFound from './views/NotFound'\n\nconst App = () => {\n  const { setToken } = useContext(userContext)\n  useEffect(() => {\n    signIn({ email: 'test@gmail.com', password: 'test' })\n      .then(({ data: { user: { token } } }) => setToken(token))\n      .then(() => {\n        console.log('============= signed in =============')\n      })\n  }, [setToken])\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/404\">\n          <NotFound />\n        </Route>\n        <Route exact path=\"/stories\">\n          <Storys />\n        </Route>\n        <Route path=\"/stories/:id\">\n          <Story />\n        </Route>\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default App\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = credentials => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = credentials => {\n  return axios({\n    url: apiUrl + '/sign-in',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios({\n    url: apiUrl + '/sign-out',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Token token=${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Token token=${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport default createMuiTheme({\n  drawerWidth: 240\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { ModalContextProvider } from './Modal/modal-context'\nimport { UserContextProvider } from './user-context'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\nimport theme from './theme'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst rootJsx = (\n  <UserContextProvider>\n    <ModalContextProvider>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <CssBaseline />\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n    </ModalContextProvider>\n  </UserContextProvider>\n)\n\nReactDOM.render(rootJsx, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}